<?php
namespace controllers;
 use models\Groupe;
 use models\Organization;
 use Ubiquity\attributes\items\router\Post;
 use Ubiquity\orm\DAO;
 use Ubiquity\attributes\items\router\Get;
 use Ubiquity\attributes\items\router\Route;
 use Ubiquity\orm\repositories\ViewRepository;
 use Ubiquity\utils\http\URequest;

 /**
  * Controller OrgaController
  */
 #[Route('orga')]
class OrgaController extends \controllers\ControllerBase{
     private ViewRepository $repo;

     public function initialize()
     {
         parent::initialize(); // TODO: Change the autogenerated stub
         $this->repo??=new ViewRepository($this, Organization::class);
     }

     private function frmOrga(Organization $orga, bool $toAdd = true){
         $path=$toAdd?'orga.add':'orga.update';
         $this->loadView('OrgaController/frmAdd.html', compact('orga'));
     }

    #[Get(name: 'orga.index')]
	public function index(){
        $this->repo->all();
		$this->loadView("OrgaController/index.html");
	}

	#[Route(path: "getOne/{idOrga}", name: "orga.getOne")]
	public function getOne($idOrga){
        $this->repo->ById($idOrga,['users','groupes']);
		$this->loadView('OrgaController/getOne.html');
	}

     #[Get(path: "add", name: 'orga.frmAdd')]
    public function  frmAdd(){
         $this->frmOrga(new Organization());
    }

     #[Get(path: "update/{idOrga}", name: 'orga.frmUpdate')]
     public function  frmUpdate(int $idOrga){
         $orga = DAO::getById(Organization::class, $idOrga);
         $this->frmOrga($orga);
     }

     #[Post(path: "add", name: 'orga.add')]
    public function add(){
        $orga=new Organization();
        URequest::setValuesToObject($orga);
        if(DAO::insert($orga)){
            $this->loadView('main/message.html', ['msg' =>"$orga ajoutee"]);
            $this->index();
        }
    }


     #[Post(path: "update/{idOrga}", name: 'orga.update')]
     public function update($idOrga){
         $orga=DAO::getById(Organization::class,$idOrga);
         URequest::setValuesToObject($orga);
         if(DAO::update($orga)) {
             $this->loadView('main/message.html', ['msg' =>"$orga mise a jour"]);
             $this->index();
         }
     }

     #[Get(path: "delete/{idOrga}", name: 'orga.delete')]
     public function delete($idOrga){
         if(DAO::delete(Organization::class,$idOrga)){
             $this->loadView('main/message.html', ['msg' =>"instance supprimÃ©e"]);
             $this->index();
         }
     }

     #[Get(path: "groupe", name: 'orga.frmGroupe')]
     public function  frmGroupe(){
         $this->loadView('OrgaController/grpAdd.html');
     }

     #[Post(path: "groupe/{idOrga}", name: 'orga.groupe')]
     public function groupe($idOrga){
         $this->repo->ById($idOrga,['users','groupes']);
         $group=new Groupe();
         URequest::setValuesToObject($group);
         $orga=DAO::getById( Organization::class, URequest::post('organization'));
         $group->setOrganization($orga);
         DAO::insert($group);
         $this->loadView('OrgaController/grpAdd.html');
     }
 }
