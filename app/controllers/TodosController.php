<?php
namespace controllers;
use Ubiquity\attributes\items\router\Get;
use Ubiquity\attributes\items\router\Post;
use Ubiquity\attributes\items\router\Route;
use Ubiquity\cache\CacheManager;
use Ubiquity\utils\http\URequest;
use Ubiquity\utils\http\USession;
use function Sodium\add;

#[Route(path : 'todos')]
class TodosController extends ControllerBase
{
    const CACHE_KEY = 'datas/lists/';
    const EMPTY_LIST_ID='not saved';
    const LIST_SESSION_KEY='list';
    const ACTIVE_LIST_SESSION_KEY='active-list';

    #[Route ('#/_default')]
    public function index(){
        $list=USession::get(self::LIST_SESSION_KEY,[]);
        $this->displayList($list);
    }

    private function displayList(array $list)
    {
        $this->loadView('TodosController/displayList.html',['list'=>$list]);
    }

    #[Post('add',name : 'todos.add')]
    public function addElement(){

        $list=USession::get(self::LIST_SESSION_KEY);
        $v = URequest::post('elm');
        $list [] = $v;
        USession::set(self::LIST_SESSION_KEY, $list);
        $this->displayList($list);
    }

    #[Get('delete/{index}',name : 'todos.delete')]
    public function deleteElement($index){
        $list=USession::get(self::LIST_SESSION_KEY);
        unset($list[$index]);

        USession::set(self::LIST_SESSION_KEY, $list=array_values($list));
        $this->displayList($list);

    }

    #[Post('edit/{index}',name : 'todos.edit')]
    public function editElement($index){
        $list=USession::get(self::LIST_SESSION_KEY);
        $v = URequest::post('elmedit');
        $list[$index] = $v;
        $list=USession::set(self::LIST_SESSION_KEY, $list);
        $this->displayList($list);
    }

    #[Get('loadList/{uniqid}',name : 'todos.loadList')]
    public function loadList($uniqid){
        $list=CacheManager::$cache->fetch(self::CACHE_KEY.$uniqid);
        $this->displayList($list);
    }

    #[Post('loadList',name : 'todos.loadListPost')]
    public function loadListFromForm(){
     $this->loadList(URequest::post('uid'));

    }

    #[Get('new/{force}',name : 'todos.new')]
    public function newList($force=false){
        $list=USession::get(self::LIST_SESSION_KEY,[]);
        if ($force == false){
            echo "La liste existe déjà et n'est pas vide";
        }
        else{
            echo "La nouvelle liste a bien été créée";
        }
        $this->displayList($list);

    }
    #[Route(name: 'TodosController-p404')]
    public function p404($url){

    }

    #[Post('saveList',name : 'todos.save')]
    public function saveList(){
        $list=USession::get(self::LIST_SESSION_KEY,[]);
        $id=uniqid('',true);
        CacheManager::$cache->store(self::CACHE_KEY . $id, $list);
        echo "<h2> la liste .$id . a bien été sauvegardée</h2>";
        $this->displayList($list);
    }

    public function initialize()
    {
        parent::initialize();
    }

    public function finalize()
    {
        parent::finalize(); // TODO: Change the autogenerated stub
    }

    private function showMessage(string $header, string $message, string $type = '', string $icon = 'info circle',array $buttons=[]) {
        $this->loadView('main/message.html', compact('header', 'type', 'icon', 'message','buttons'));
    }

}